{"ast":null,"code":"var _jsxFileName = \"D:\\\\tlcn\\\\generate-image-app\\\\client\\\\src\\\\pages\\\\Text2Image.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Grid2, Typography, Container, Button, Paper, TextField, MenuItem, FormLabel } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generate } from '../actions/comfy.js';\nimport GeneratedImage from '../components/GeneratedImage.js';\nimport { sizes } from '../constants/imageSizes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Text2Image = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    positive: '',\n    negative: '',\n    steps: steps[0].value,\n    size: sizes[0].value,\n    image: ''\n  });\n  const handleGenerateClick = e => {\n    e.preventDefault();\n    console.log(formData);\n    dispatch(generate(formData));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      py: 4,\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid2, {\n      container: true,\n      spacing: 8,\n      sx: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid2, {\n        size: {\n          xs: 12,\n          md: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 6,\n          raised: true,\n          children: /*#__PURE__*/_jsxDEV(Grid2, {\n            container: true,\n            component: \"form\",\n            noValidate: true,\n            autoComplete: \"off\",\n            direction: \"column\",\n            spacing: 4,\n            sx: {\n              px: 4,\n              py: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              name: \"positive\",\n              label: \"Positive Prompt\",\n              value: formData.positive,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  positive: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              name: \"negative\",\n              label: \"Negative Prompt\",\n              value: formData.negative,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  negative: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n              container: true,\n              direction: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                sx: {\n                  flexGrow: 1\n                },\n                select: true,\n                label: \"Step\",\n                helperText: \"Please select step\",\n                value: formData.steps,\n                onChange: e => {\n                  setFormData({\n                    ...formData,\n                    steps: e.target.value\n                  });\n                },\n                children: steps.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                sx: {\n                  flexGrow: 1\n                },\n                select: true,\n                label: \"Size Image\",\n                value: formData.size,\n                helperText: \"Please select your size\",\n                onChange: e => {\n                  setFormData({\n                    ...formData,\n                    size: e.target.value\n                  });\n                },\n                children: sizes.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), hasImage ? /*#__PURE__*/_jsxDEV(UploadImageZone, {\n              fileBase64: formData.image,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  image: e\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 42\n            }, this) : '', /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleGenerateClick,\n              children: \"Generate Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n        size: {\n          xs: 12,\n          md: 8,\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(GeneratedImage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Text2Image, \"0WC/zi2THisRxawQrDbRbJ9oFyQ=\", false, function () {\n  return [useDispatch];\n});\n_c = Text2Image;\nexport default Text2Image;\nvar _c;\n$RefreshReg$(_c, \"Text2Image\");","map":{"version":3,"names":["React","useState","Box","Grid2","Typography","Container","Button","Paper","TextField","MenuItem","FormLabel","useDispatch","useSelector","generate","GeneratedImage","sizes","jsxDEV","_jsxDEV","Text2Image","_s","dispatch","formData","setFormData","positive","negative","steps","value","size","image","handleGenerateClick","e","preventDefault","console","log","maxWidth","sx","py","height","children","container","spacing","xs","md","elevation","raised","component","noValidate","autoComplete","direction","px","variant","title","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","multiline","name","label","onChange","target","flexGrow","select","helperText","map","option","hasImage","UploadImageZone","fileBase64","type","color","onClick","_c","$RefreshReg$"],"sources":["D:/tlcn/generate-image-app/client/src/pages/Text2Image.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    Box,\r\n    Grid2,\r\n    Typography,\r\n    Container,\r\n    Button,\r\n    Paper,\r\n    TextField,\r\n    MenuItem,\r\n    FormLabel\r\n} from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { generate } from '../actions/comfy.js';\r\nimport GeneratedImage from '../components/GeneratedImage.js';\r\nimport { sizes } from '../constants/imageSizes.js';\r\n\r\nconst Text2Image = () => {\r\n    const dispatch = useDispatch();\r\n    const [formData, setFormData] = useState({\r\n        positive: '',\r\n        negative: '',\r\n        steps: steps[0].value,\r\n        size: sizes[0].value,\r\n        image: ''\r\n    })\r\n\r\n    const handleGenerateClick = (e) => {\r\n        e.preventDefault();\r\n        console.log(formData);\r\n        dispatch(generate(formData));\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='xl' sx={{ py: 4, height: '100%' }}>\r\n            <Grid2 container spacing={8} sx={{ height: '100%' }}>\r\n                <Grid2 size={{ xs: 12, md: 4 }}>\r\n                    <Paper elevation={6} raised>\r\n                        <Grid2 container component='form' noValidate autoComplete=\"off\" direction='column' spacing={4} sx={{ px: 4, py: 4 }}>\r\n                            <Typography variant='h5'>{title}</Typography>\r\n                            <TextField fullWidth multiline name='positive' label='Positive Prompt'\r\n                                value={formData.positive} onChange={(e) => {\r\n                                    setFormData({ ...formData, positive: e.target.value });\r\n                                }} />\r\n                            <TextField fullWidth multiline name='negative' label='Negative Prompt'\r\n                                value={formData.negative} onChange={(e) => {\r\n                                    setFormData({ ...formData, negative: e.target.value });\r\n                                }} />\r\n                            <Grid2 container direction='row'>\r\n                                <TextField\r\n                                    sx={{ flexGrow: 1 }}\r\n                                    select\r\n                                    label=\"Step\"\r\n                                    helperText=\"Please select step\"\r\n                                    value={formData.steps}\r\n                                    onChange={(e) => {\r\n                                        setFormData({ ...formData, steps: e.target.value });\r\n                                    }}\r\n                                >\r\n                                    {steps.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                                <TextField\r\n                                    sx={{ flexGrow: 1 }}\r\n                                    select\r\n                                    label=\"Size Image\"\r\n                                    value={formData.size}\r\n                                    helperText=\"Please select your size\"\r\n                                    onChange={(e) => {\r\n                                        setFormData({ ...formData, size: e.target.value });\r\n                                    }}\r\n                                >\r\n                                    {sizes.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Grid2>\r\n                            {hasImage ? (<UploadImageZone fileBase64={formData.image} onChange={(e) => {\r\n                                setFormData({ ...formData, image: e });\r\n                            }} />) : ''}\r\n                            <Button\r\n                                size='large' type='submit' variant='contained' color='primary'\r\n                                onClick={handleGenerateClick}\r\n                            >\r\n                                Generate Image\r\n                            </Button>\r\n                        </Grid2>\r\n                    </Paper>\r\n                </Grid2>\r\n                <Grid2 size={{ xs: 12, md: 8, height: '100%' }}>\r\n                    <GeneratedImage />\r\n                </Grid2>\r\n            </Grid2>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Text2Image"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACIC,GAAG,EACHC,KAAK,EACLC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,SAAS,EACTC,QAAQ,EACRC,SAAS,QACN,eAAe;AACtB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,SAASC,KAAK,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC;IACrCsB,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAEA,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK;IACrBC,IAAI,EAAEZ,KAAK,CAAC,CAAC,CAAC,CAACW,KAAK;IACpBE,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,mBAAmB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;IACrBD,QAAQ,CAACP,QAAQ,CAACQ,QAAQ,CAAC,CAAC;EAChC,CAAC;EAED,oBACIJ,OAAA,CAACZ,SAAS;IAAC6B,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eACnDrB,OAAA,CAACd,KAAK;MAACoC,SAAS;MAACC,OAAO,EAAE,CAAE;MAACL,EAAE,EAAE;QAAEE,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAChDrB,OAAA,CAACd,KAAK;QAACwB,IAAI,EAAE;UAAEc,EAAE,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAJ,QAAA,eAC3BrB,OAAA,CAACV,KAAK;UAACoC,SAAS,EAAE,CAAE;UAACC,MAAM;UAAAN,QAAA,eACvBrB,OAAA,CAACd,KAAK;YAACoC,SAAS;YAACM,SAAS,EAAC,MAAM;YAACC,UAAU;YAACC,YAAY,EAAC,KAAK;YAACC,SAAS,EAAC,QAAQ;YAACR,OAAO,EAAE,CAAE;YAACL,EAAE,EAAE;cAAEc,EAAE,EAAE,CAAC;cAAEb,EAAE,EAAE;YAAE,CAAE;YAAAE,QAAA,gBAChHrB,OAAA,CAACb,UAAU;cAAC8C,OAAO,EAAC,IAAI;cAAAZ,QAAA,EAAEa;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eAC7CtC,OAAA,CAACT,SAAS;cAACgD,SAAS;cAACC,SAAS;cAACC,IAAI,EAAC,UAAU;cAACC,KAAK,EAAC,iBAAiB;cAClEjC,KAAK,EAAEL,QAAQ,CAACE,QAAS;cAACqC,QAAQ,EAAG9B,CAAC,IAAK;gBACvCR,WAAW,CAAC;kBAAE,GAAGD,QAAQ;kBAAEE,QAAQ,EAAEO,CAAC,CAAC+B,MAAM,CAACnC;gBAAM,CAAC,CAAC;cAC1D;YAAE;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACTtC,OAAA,CAACT,SAAS;cAACgD,SAAS;cAACC,SAAS;cAACC,IAAI,EAAC,UAAU;cAACC,KAAK,EAAC,iBAAiB;cAClEjC,KAAK,EAAEL,QAAQ,CAACG,QAAS;cAACoC,QAAQ,EAAG9B,CAAC,IAAK;gBACvCR,WAAW,CAAC;kBAAE,GAAGD,QAAQ;kBAAEG,QAAQ,EAAEM,CAAC,CAAC+B,MAAM,CAACnC;gBAAM,CAAC,CAAC;cAC1D;YAAE;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACTtC,OAAA,CAACd,KAAK;cAACoC,SAAS;cAACS,SAAS,EAAC,KAAK;cAAAV,QAAA,gBAC5BrB,OAAA,CAACT,SAAS;gBACN2B,EAAE,EAAE;kBAAE2B,QAAQ,EAAE;gBAAE,CAAE;gBACpBC,MAAM;gBACNJ,KAAK,EAAC,MAAM;gBACZK,UAAU,EAAC,oBAAoB;gBAC/BtC,KAAK,EAAEL,QAAQ,CAACI,KAAM;gBACtBmC,QAAQ,EAAG9B,CAAC,IAAK;kBACbR,WAAW,CAAC;oBAAE,GAAGD,QAAQ;oBAAEI,KAAK,EAAEK,CAAC,CAAC+B,MAAM,CAACnC;kBAAM,CAAC,CAAC;gBACvD,CAAE;gBAAAY,QAAA,EAEDb,KAAK,CAACwC,GAAG,CAAEC,MAAM,iBACdjD,OAAA,CAACR,QAAQ;kBAAoBiB,KAAK,EAAEwC,MAAM,CAACxC,KAAM;kBAAAY,QAAA,EAC5C4B,MAAM,CAACP;gBAAK,GADFO,MAAM,CAACxC,KAAK;kBAAA0B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEjB,CACb;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC,eACZtC,OAAA,CAACT,SAAS;gBACN2B,EAAE,EAAE;kBAAE2B,QAAQ,EAAE;gBAAE,CAAE;gBACpBC,MAAM;gBACNJ,KAAK,EAAC,YAAY;gBAClBjC,KAAK,EAAEL,QAAQ,CAACM,IAAK;gBACrBqC,UAAU,EAAC,yBAAyB;gBACpCJ,QAAQ,EAAG9B,CAAC,IAAK;kBACbR,WAAW,CAAC;oBAAE,GAAGD,QAAQ;oBAAEM,IAAI,EAAEG,CAAC,CAAC+B,MAAM,CAACnC;kBAAM,CAAC,CAAC;gBACtD,CAAE;gBAAAY,QAAA,EAEDvB,KAAK,CAACkD,GAAG,CAAEC,MAAM,iBACdjD,OAAA,CAACR,QAAQ;kBAAoBiB,KAAK,EAAEwC,MAAM,CAACxC,KAAM;kBAAAY,QAAA,EAC5C4B,MAAM,CAACP;gBAAK,GADFO,MAAM,CAACxC,KAAK;kBAAA0B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEjB,CACb;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,EACPY,QAAQ,gBAAIlD,OAAA,CAACmD,eAAe;cAACC,UAAU,EAAEhD,QAAQ,CAACO,KAAM;cAACgC,QAAQ,EAAG9B,CAAC,IAAK;gBACvER,WAAW,CAAC;kBAAE,GAAGD,QAAQ;kBAAEO,KAAK,EAAEE;gBAAE,CAAC,CAAC;cAC1C;YAAE;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GAAI,EAAE,eACXtC,OAAA,CAACX,MAAM;cACHqB,IAAI,EAAC,OAAO;cAAC2C,IAAI,EAAC,QAAQ;cAACpB,OAAO,EAAC,WAAW;cAACqB,KAAK,EAAC,SAAS;cAC9DC,OAAO,EAAE3C,mBAAoB;cAAAS,QAAA,EAChC;YAED;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACRtC,OAAA,CAACd,KAAK;QAACwB,IAAI,EAAE;UAAEc,EAAE,EAAE,EAAE;UAAEC,EAAE,EAAE,CAAC;UAAEL,MAAM,EAAE;QAAO,CAAE;QAAAC,QAAA,eAC3CrB,OAAA,CAACH,cAAc;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAAApC,EAAA,CAnFKD,UAAU;EAAA,QACKP,WAAW;AAAA;AAAA8D,EAAA,GAD1BvD,UAAU;AAqFhB,eAAeA,UAAU;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}