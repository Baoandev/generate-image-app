{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  image: null\n};\nconst comfySlice = createSlice({\n  name: 'posts',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(`${'NO_LOGIN'}`, () => {\n      return {\n        ...initialState,\n        isLoading: false\n      };\n    }).addCase(`${actionType.RESET_STATE}`, () => initialState).addCase(`${actionType.FETCH_ALL}/fulfilled`, (state, action) => {\n      var _action$payload, _action$payload2, _action$payload3;\n      return {\n        ...state,\n        posts: action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data,\n        currentPage: action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.currentPage,\n        numberOfPages: action === null || action === void 0 ? void 0 : (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.numberOfPages\n      };\n    }).addCase(`${actionType.FETCH_BY_SEARCH}/fulfilled`, (state, action) => {\n      return {\n        ...state,\n        posts: action === null || action === void 0 ? void 0 : action.payload.data\n      };\n    }).addCase(`${actionType.CREATE}/fulfilled`, (state, action) => {\n      return {\n        ...state,\n        posts: [...state.posts, action.payload]\n      };\n    }).addCase(`${actionType.UPDATE}/fulfilled`, (state, action) => {\n      return {\n        posts: state.posts.map(p => p._id === action.payload._id ? action.payload : p)\n      };\n    }).addCase(`${actionType.DELETE}/fulfilled`, (state, action) => {\n      return {\n        posts: state.posts.filter(p => p._id !== action.payload)\n      };\n    }).addCase(`${actionType.LIKE}/fulfilled`, (state, action) => {\n      return {\n        ...state,\n        posts: state.posts.map(p => p._id === action.payload._id ? {\n          ...p,\n          likes: action.payload.likes\n        } : p)\n      };\n    }).addMatcher(action => action.type.match(/FETCH.*\\/pending/), (state, action) => {\n      return {\n        ...state,\n        isLoading: true\n      };\n    }).addMatcher(action => action.type.endsWith('/fulfilled'), (state, action) => {\n      return {\n        ...state,\n        isLoading: false\n      };\n    });\n  }\n});\nexport default comfySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","image","comfySlice","name","reducers","extraReducers","builder","addCase","isLoading","actionType","RESET_STATE","FETCH_ALL","state","action","_action$payload","_action$payload2","_action$payload3","posts","payload","data","currentPage","numberOfPages","FETCH_BY_SEARCH","CREATE","UPDATE","map","p","_id","DELETE","filter","LIKE","likes","addMatcher","type","match","endsWith","reducer"],"sources":["D:/tlcn/generate-image-app/client/src/reducers/comfy.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    image: null\r\n}\r\n\r\nconst comfySlice = createSlice({\r\n    name: 'posts',\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(`${'NO_LOGIN'}`, () => { return { ...initialState, isLoading: false }; })\r\n            .addCase(`${actionType.RESET_STATE}`, () => initialState)\r\n            .addCase(`${actionType.FETCH_ALL}/fulfilled`, (state, action) => {\r\n                return {\r\n                    ...state,\r\n                    posts: action?.payload?.data,\r\n                    currentPage: action?.payload?.currentPage,\r\n                    numberOfPages: action?.payload?.numberOfPages,\r\n                };\r\n            })\r\n            .addCase(`${actionType.FETCH_BY_SEARCH}/fulfilled`, (state, action) => {\r\n                return {\r\n                    ...state,\r\n                    posts: action?.payload.data,\r\n                };\r\n            })\r\n            .addCase(`${actionType.CREATE}/fulfilled`, (state, action) => {\r\n                return {\r\n                    ...state,\r\n                    posts: [...state.posts, action.payload],\r\n                };\r\n            })\r\n            .addCase(`${actionType.UPDATE}/fulfilled`, (state, action) => {\r\n                return {\r\n                    posts: state.posts.map((p) => p._id === action.payload._id ? action.payload : p),\r\n                };\r\n            })\r\n            .addCase(`${actionType.DELETE}/fulfilled`, (state, action) => {\r\n                return {\r\n                    posts: state.posts.filter((p) => p._id !== action.payload),\r\n                };\r\n            })\r\n            .addCase(`${actionType.LIKE}/fulfilled`, (state, action) => {\r\n                return {\r\n                    ...state,\r\n                    posts: state.posts.map((p) =>\r\n                        p._id === action.payload._id\r\n                            ? { ...p, likes: action.payload.likes }\r\n                            : p\r\n                    ),\r\n                };\r\n            })\r\n            .addMatcher(\r\n                (action) => action.type.match(/FETCH.*\\/pending/),\r\n                (state, action) => {\r\n                    return {\r\n                        ...state,\r\n                        isLoading: true\r\n                    };\r\n                }\r\n\r\n            )\r\n            .addMatcher(\r\n                (action) => action.type.endsWith('/fulfilled'),\r\n                (state, action) => {\r\n                    return {\r\n                        ...state,\r\n                        isLoading: false\r\n                    };\r\n                }\r\n\r\n            );\r\n    },\r\n});\r\n\r\nexport default comfySlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}