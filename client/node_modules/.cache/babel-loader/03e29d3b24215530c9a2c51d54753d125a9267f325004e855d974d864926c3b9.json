{"ast":null,"code":"import * as api from '../apis/index.js';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as actionTypes from '../constants/actionTypes.js';\n\n// Action creators\nexport const generateImageByText = createAsyncThunk(actionTypes.GENERATE_BY_TEXT, async (formData, thunkAPI) => {\n  const {\n    rejectWithValue\n  } = thunkAPI;\n  try {\n    console.log(formData);\n    const {\n      data\n    } = await api.generateImageByText(formData);\n    return data === null || data === void 0 ? void 0 : data.img;\n  } catch (error) {\n    rejectWithValue(error.message);\n  }\n});\nexport const generateImageBySketch = createAsyncThunk(actionTypes.GENERATE_BY_TEXT, async (formData, thunkAPI) => {\n  const {\n    rejectWithValue\n  } = thunkAPI;\n  try {\n    // formData.ima Buffer.from(result.split(',')[1], 'base64')\n    const {\n      data\n    } = await api.generateImageBySketch(formData);\n    return data === null || data === void 0 ? void 0 : data.img;\n  } catch (error) {\n    rejectWithValue(error.message);\n  }\n});","map":{"version":3,"names":["api","createAsyncThunk","actionTypes","generateImageByText","GENERATE_BY_TEXT","formData","thunkAPI","rejectWithValue","console","log","data","img","error","message","generateImageBySketch"],"sources":["D:/tlcn/generate-image-app/client/src/actions/comfy.js"],"sourcesContent":["import * as api from '../apis/index.js';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as actionTypes from '../constants/actionTypes.js';\r\n\r\n// Action creators\r\nexport const generateImageByText = createAsyncThunk(actionTypes.GENERATE_BY_TEXT, async (formData, thunkAPI) => {\r\n    const { rejectWithValue } = thunkAPI;\r\n    try {\r\n        console.log(formData);\r\n        const { data } = await api.generateImageByText(formData);\r\n\r\n        return data?.img;\r\n    } catch (error) {\r\n        rejectWithValue(error.message);\r\n    }\r\n});\r\n\r\nexport const generateImageBySketch = createAsyncThunk(actionTypes.GENERATE_BY_TEXT, async (formData, thunkAPI) => {\r\n    const { rejectWithValue } = thunkAPI;\r\n    try {\r\n        // formData.ima Buffer.from(result.split(',')[1], 'base64')\r\n        const { data } = await api.generateImageBySketch(formData);\r\n\r\n        return data?.img;\r\n    } catch (error) {\r\n        rejectWithValue(error.message);\r\n    }\r\n});\r\n\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,kBAAkB;AACvC,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,OAAO,KAAKC,WAAW,MAAM,6BAA6B;;AAE1D;AACA,OAAO,MAAMC,mBAAmB,GAAGF,gBAAgB,CAACC,WAAW,CAACE,gBAAgB,EAAE,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC5G,MAAM;IAAEC;EAAgB,CAAC,GAAGD,QAAQ;EACpC,IAAI;IACAE,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACG,mBAAmB,CAACE,QAAQ,CAAC;IAExD,OAAOK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,GAAG;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,eAAe,CAACK,KAAK,CAACC,OAAO,CAAC;EAClC;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,qBAAqB,GAAGb,gBAAgB,CAACC,WAAW,CAACE,gBAAgB,EAAE,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC9G,MAAM;IAAEC;EAAgB,CAAC,GAAGD,QAAQ;EACpC,IAAI;IACA;IACA,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACc,qBAAqB,CAACT,QAAQ,CAAC;IAE1D,OAAOK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,GAAG;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,eAAe,CAACK,KAAK,CAACC,OAAO,CAAC;EAClC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}